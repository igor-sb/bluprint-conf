.. image:: images/bluprintconf_logo.png

Bluprint_conf
=============


Existing Problem
----------------

Bluprint_conf assumes you have a Python project setup in this type of
"cookiecutter" structure (generated by Bluprint)::

	my_project
	├── conf
	│   └── config.yaml
	├── data
	│   └── table.csv
	├── notebooks
	│   └── section
	│       └── notebook.ipynb
	├── my_project
	│   └── code.py
	└── pyproject.toml

where ``config.yaml`` configuration lives in another folder, separate from any
Python code or notebooks. 

Previously, loading ``config.yaml`` would require annoyances such as:

.. code-block:: python

	import yaml
	
	yaml_file = '../conf/config.yaml'
	with open(yaml_file, 'r') as file
		cfg = yaml.safe_load(file)

which works from the ``code.py`` file but not ``notebook.ipynb`` - for which we
need to use ``yaml_file = '../../conf/config.yaml'``. An alternative solution is
to use a full path ``yaml_file = '/absolute/path/to/my_project/conf/config.yaml'``
but that is not a portable solution.

All of these solutions are hard to maintain or need to be constantly updated
depending on where the calling script is in relation to `config.yaml`.


Solution
--------

With bluprint_conf, the files are always loaded in the same way, regardless of
the location of our script or notebook, as long as they are within the project
root folder:

.. code-block:: python

	from bluprint_conf import load_config_yaml
	cfg = load_config_yaml()  # by default loads: conf/config.yaml


.. toctree::
   :maxdepth: 1
   :caption: Contents:


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
